openapi: 3.1.0
info:
  title: API для проекта «FIT FRIENDS»
  description: FitFriends — это онлайн площадка для поиска тренировок и их создания. Веб-приложение (сайт) функционирует как смесь соцсети и биржи объявлений. Тренеры создают тренировки, а пользователи могут покупать их и заниматься по ним, приглашать других пользователей на совместные тренировки, а тренеров просить провести индивидуальную тренировку.
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

tags:
  - name: Кабинет пользователя
    description: Действия в кабинете пользователя
  - name: Кабинет тренера
    description: Действия в кабинете тренера
  - name: trainers
    description: Действия с тренерами
  - name: users
    description: Действия с балансом пользователя
  - name: notifications
    description: Действия с уведомлениями
  - name: orders
    description: Действия с заказами
  - name: requests
    description: Действия с запросами
  - name: reviews
    description: Действия с отзывами
  - name: subscribers
    description: Действия с подписчиками
  - name: trainings
    description: Действия с тренировками
  - name: tokens
    description: Действия с токенами

paths:

  /trainers/register:
    post:
      tags:
        - trainers
      summary: Создание нового тренера
      description: Создает нового тренера.

      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trainer'
      responses:
          '201':
            description: Успешное создание тренера
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/trainerRdo'
          '400':
            description: Ошибка запроса. Некорректные данные создания для нового тренера.
          '409':
            description: Пользователь с таким email уже существует.

  /users/register:
    post:
      tags:
        - users
      summary: Создание нового пользователя
      description: Создает нового пользователя.

      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
      responses:
          '201':
            description: Успешное создание пользователя
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/userWithFriendsRdo'
          '400':
            description: Ошибка запроса. Некорректные данные создания для нового пользователя.
          '409':
            description: Пользователь с таким email уже существует.

  /users/login:
    get:
      tags:
        - users
      summary: Проверка Access Token пользователя
      description: Проверяет Access Token пользователя.

      responses:
        '200':
          description: Успешная аутентификация. Возвращается информация о пользователе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkedUserRdo'
        '401':
          description: Ошибка аутентификации.

    post:
      tags:
        - users
      summary: Вход в закрытую часть приложения
      description: Авторизовывает пользователя.

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: Успешная аутентификация. Возвращается токен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loggedUserRdo'
        '400':
          description: Ошибка запроса. Некорректные данные при аутентификации.
        '401':
          description: Ошибка аутентификации. Неверный логин или пароль.
        '404':
          description: Пользователь не найден

  /users/logout:
    post:
      tags:
        - users
      summary: Выход из закрытой части приложения
      description: Выходит из закрытой части приложения

      responses:
        '200':
          description: Успешное завершение сеанса пользователя.
        '401':
          description: Ошибка аутентификации. Токен не действителен или отсутствует.

  /users/refresh:
    get:
      tags:
        - users
      summary: Обновление Refresh Token
      description: Обновляет Refresh Token.

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginRequest'
      responses:
        '200':
          description: Успешное обновление токена.
        '400':
          description: Ошибка запроса. Некорректные данные при аутентификации.
        '401':
          description: Ошибка аутентификации. Неверный логин или пароль.

  /users/:
    get:
      tags:
        - users
      summary: Получение списка пользователей
      description: Получает список пользователей.

      parameters:
      - in: query
        name: location
        description: Фильтрация пользователей по местоположению.
        schema:
          type: string
        example: пионерская
      - in: query
        name: workoutTypes
        description: Фильтрация пользователей по типам тренировок.
        schema:
          type: array
          items:
            type: string
        example: аэробика,бокс
      - in: query
        name: trainingLevel
        description: Фильтрация пользователей по уровню тренировок.
        schema:
          type: string
        example: профессионал
      - in: query
        name: sortBy
        description: Сортировка пользователей по роли.
        schema:
          type: string
        example: тренер
      - in: query
        name: limit
        description: Ограничение количества результатов на странице.
        schema:
          type: integer
          minimum: 1
        example: 3
      - in: query
        name: page
        description: Номер страницы для пагинации.
        schema:
          type: integer
          minimum: 1
        example: 3
      - in: query
        name: createdAtDirection
        description: Сортировка по дате создания.
        schema:
          type: string
        example: desc

      responses:
        '200':
          description: Успешное получение списка друзей
          content:
            application/json:
              schema:
                type: array
                items:
                - $ref: '#/components/schemas/userRdo'
        '401':
          description: Ошибка аутентификации. Неверный логин или пароль.
        '404':
          description: Пользователь не найден.

    put:
      tags:
        - users
      summary: Обновление пользователя
      description: Обновляет пользователя.

      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/userWithoutPrivateRows'
                - $ref: '#/components/schemas/trainerWithoutPrivateRows'

      responses:
        '200':
          description: Успешное обновление пользователя
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/userRdo'
                  - $ref: '#/components/schemas/trainerRdo'
        '400':
          description: Ошибка запроса. Некорректные данные при обновлении пользователя.
        '401':
          description: Ошибка аутентификации. Неверный логин или пароль.
        '404':
          description: Пользователь не найден.

  /users/{userId}:
    get:
      tags:
        - users
      summary: Детальная информация о пользователе
      description: Получает детельную информацию по id пользователя.

      parameters:
        - in: path
          name: userId
          description: Id пользователя
          schema:
            type: string
          required: true

      responses:
        '200':
          description: Успешное обновление пользователя
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/userRdo'
                  - $ref: '#/components/schemas/trainerRdo'
        '400':
          description: Ошибка запроса. Некорректные данные при запросе информации пользователя.
        '401':
          description: Ошибка аутентификации. Неверный логин или пароль.
        '404':
          description: Пользователь не найден.

  /friends:
    get:
      tags:
        - Кабинет пользователя
        - Кабинет тренера
      summary: Получение списка друзей
      description: Получает список друзей.

      parameters:
      - in: query
        name: limit
        description: Ограничение количества результатов на странице.
        schema:
          type: integer
          minimum: 1
        example: 3
      - in: query
        name: page
        description: Номер страницы для пагинации.
        schema:
          type: integer
          minimum: 1
        example: 3
      - in: query
        name: createdAtDirection
        description: Сортировка по дате создания.
        schema:
          type: string
        example: desc

      responses:
        '200':
          description: Успешное получение списка друзей
          content:
            application/json:
              schema:
                type: array
                items:
                - $ref: '#/components/schemas/userRdo'
        '401':
          description: Ошибка аутентификации. Неверный логин или пароль.

  /friends/{userId}:
    post:
      tags:
        - Кабинет пользователя
      summary: Добавить в друзья
      description: Добавляет в список друзей.

      parameters:
        - in: path
          name: userId
          description: Id добавляемого пользователя
          schema:
            type: string
          required: true

      responses:
        '201':
          description: Успешное добавление в список друзей
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/userRdo'
                  - $ref: '#/components/schemas/trainerRdo'
        '400':
          description: Ошибка запроса. Некорректные данные при запросе информации пользователя.
        '401':
          description: Ошибка аутентификации.
        '404':
          description: Пользователь не найден.

    delete:
      tags:
        - Кабинет пользователя
      summary: Удалить из друзей
      description: Удаляет из списка друзей.

      parameters:
        - in: path
          name: userId
          description: Id добавляемого пользователя
          schema:
            type: string
          required: true

      responses:
        '200':
          description: Успешное удаление из списка друзей
        '401':
          description: Ошибка аутентификации.
        '404':
          description: Пользователь не найден.

  /balance:
    get:
      tags:
        - Кабинет пользователя
      summary: Получение баланса пользователя
      description: Получает баланс с тренировками пользователя.

      parameters:
      - in: query
        name: limit
        description: Ограничение количества результатов на странице.
        schema:
          type: integer
          minimum: 1
        example: 3
      - in: query
        name: page
        description: Номер страницы для пагинации.
        schema:
          type: integer
          minimum: 1
        example: 3
      - in: query
        name: createdAtDirection
        description: Сортировка по дате создания.
        schema:
          type: string
        example: desc

      responses:
        '200':
          description: Успешное получение баланса
          content:
            application/json:
              schema:
                type: array
                items:
                - $ref: '#/components/schemas/balanceRdo'
        '401':
          description: Ошибка аутентификации. Неверный логин или пароль.

  /balance/training/{trainingId}:
    post:
      tags:
        - Кабинет пользователя
      summary: Добавление тренировки в баланс пользователя
      description: Добавляет тренировку в баланс пользователя

      parameters:
        - in: path
          name: trainingId
          description: Id добавляемой тренировки
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Успешное добавление тренировки в баланс
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balanceRdo'
        '400':
          description: Ошибка запроса. Некорректные данные при сохранении тренировки в баланс пользователя.
        '401':
          description: Ошибка аутентификации.
        '404':
          description: Тренировка не найдена.
        '409':
          description: Баланс с тренировкой уже существует.

    patch:
      tags:
        - Кабинет пользователя
      summary: Обновление баланса тренировок
      description: Обновляет баланс тренировок

      parameters:
        - in: path
          name: trainingId
          description: Id обновляемой тренировки
          schema:
            type: string
          required: true

      responses:
        '200':
          description: Успешное Обновление баланса тренировки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balanceRdo'
        '400':
          description: Ошибка запроса. Некорректные данные при обновлении баланса тренировки.
        '401':
          description: Ошибка аутентификации.
        '404':
          description: Баланс с такой тренировкой не найден.


  /notifications:
    get:
      tags:
        - notifications
      summary: Список уведомлений
      description: Получает список уведомлений для пользователя.

      responses:
        '200':
          description: Успешное получение списка уведомлений
          content:
            application/json:
              schema:
                type: array
                items:
                - $ref: '#/components/schemas/notificationRdo'
        '401':
          description: Ошибка аутентификации. Неверный логин или пароль.

  /notifications/{notificationId}:
    delete:
      tags:
        - notifications
      summary: Удалить уведомление
      description: Удаляет уведомления и возвращает список последних уведомлений

      parameters:
        - in: path
          name: notificationId
          description: Id удаляемого уведомления
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Успешное удаление уведомления и получения списка уведомлений
          content:
            application/json:
              schema:
                type: array
                items:
                - $ref: '#/components/schemas/notificationRdo'
        '400':
          description: Ошибка в параметрах. Уведомление не найдено.
        '401':
          description: Ошибка аутентификации. Неверный логин или пароль.
        '403':
          description: Ошибка удаления уведомления. Нет доступа на удаление уведомления.
        '404':
          description: Уведомление не найдено.

  orders/trainer-room/{trainerId}:
    get:
      tags:
        -  Кабинет тренера
      summary: Список заказов
      description: Получает список заказов тренера

      parameters:
        - in: path
          name: trainerId
          description: Id тренера дял получения заказов
          schema:
            type: string
            required: true
        - in: query
          name: limit
          description: Ограничение количества результатов на странице.
          schema:
            type: integer
            minimum: 1
            example: 3
        - in: query
          name: page
          description: Номер страницы для пагинации.
          schema:
            type: integer
            minimum: 1
            example: 3
        - in: query
          name: typeOrder
          description: Сортируемое поле.
          schema:
            type: string
            enum:
              - totalSalesAmount
              - purchasedQuantity
            example: purchasedQuantity
        - in: query
          name: sortOrder
          description: Направление сортировки.
          schema:
            type: string
            enum:
              - desc
              - asc
            example: desc
      responses:
        '200':
          description: Успешное получение списка заказов
          content:
            application/json:
              schema:
                type: array
                items:
                - $ref: '#/components/schemas/trainingOrderRdo'
        '400':
          description: Ошибка в параметрах. Тренер не найден.
        '401':
          description: Ошибка аутентификации. Неверный логин или пароль.
        '403':
          description: Ошибка получения списка заказов. Нет доступа к тренировкам тренера.

  orders/{trainingId}:
    post:
      tags:
        - orders
      summary: Создание заказа
      description: Добавляет заказ в список пользькователя

      parameters:
        - in: path
          name: trainingId
          description: Id добавляемой тренировки в заказ
          schema:
            type: string
            required: true

      responses:
        '201':
          description: Успешное Добавление заказа
          content:
            application/json:
              schema:
                type: array
                items:
                - $ref: '#/components/schemas/orderRdo'
        '401':
          description: Ошибка аутентификации. Неверный логин или пароль.
        '403':
          description: Ошибка добавления заказа. Нет доступа.
        '404':
          description: Тренировка не найдена.

components:
  schemas:

    trainerWithoutPrivateRows:
      type: object
      properties:
        name:
          type: string
          example: Александр Петров
          minLength: 1
          maxLength: 15
          description: Имя пользователя.
        avatar:
          type: string
          example: avatar.jpg
          pattern: '^.+\.(jpg|png)$'
          description: Ссылка на аватар пользователя (в форматах jpg или png).
        gender:
          type: string
          enum: [женский, мужской, неважно]
          example: мужской
          description: Пол пользователя.
        birthDate:
          type: string
          example: 1990-01-01
          format: date
          description: Дата рождения пользователя.
        description:
          type: string
          example: Опытный тренер
          minLength: 10
          maxLength: 140
          description: Описание пользователя.
        location:
          type: string
          enum: [пионерская, петроградская, удельная, звёздная. спортивная]
          example: удельная
          description: Местоположение пользователя.
        backgroundImage:
          type: string
          example: background.jpg
          pattern: '^.+\.(jpg|png)$'
          description: Ссылка на фоновое изображение пользователя (в форматах jpg или png).
        trainingLevel:
          type: string
          enum: [новичок, любитель, профессионал]
          example: профессионал
          description: Уровень тренировок пользователя.
        workoutTypes:
          type: array
          items:
            type: string
            enum: [йога, бег, бокс, стрейчинг, кроссфит, аэробика, пилатес]
          minItems: 1
          maxItems: 3
          example: [бокс, аэробика, кроссфит]
          description: Типы тренировок, которые предпочитает пользователь (не более 3).
        personalTraining:
          type: boolean
          example: true
          description: Флаг готовности проводить индивидуальные тренировки
        trainerAchievements:
          type: string
          example: Множество наград и сертификатов
          minLength: 10
          maxLength: 140
          description: Заслуги тренера
        certificate:
          type: string
          example: certificate.pdf
          pattern: '^.+\.pdf$'
          description: Сертификат пользователя

    trainer:
      type: object
      properties:
        name:
          type: string
          example: Александр Петров
          minLength: 1
          maxLength: 15
          description: Имя пользователя.
        email:
          type: string
          format: email
          description: Email тренера.
        avatar:
          type: string
          example: avatar.jpg
          pattern: '^.+\.(jpg|png)$'
          description: Ссылка на аватар пользователя (в форматах jpg или png).
        password:
          type: string
          example: 123456
          minLength: 6
          maxLength: 12
        gender:
          type: string
          enum: [женский, мужской, неважно]
          description: Пол пользователя.
          example: мужской
        birthDate:
          type: string
          example: 1990-01-01
          format: date
          description: Дата рождения пользователя.
        description:
          type: string
          example: Опытный тренер
          minLength: 10
          maxLength: 140
          description: Описание пользователя.
        location:
          type: string
          enum: [пионерская, петроградская, удельная, звёздная. спортивная]
          example: удельная
          description: Местоположение пользователя.
        backgroundImage:
          type: string
          example: background.jpg
          pattern: '^.+\.(jpg|png)$'
          description: Ссылка на фоновое изображение пользователя (в форматах jpg или png).
        trainingLevel:
          type: string
          enum: [новичок, любитель, профессионал]
          example: профессионал
          description: Уровень тренировок пользователя.
        workoutTypes:
          type: array
          items:
            type: string
            enum: [йога, бег, бокс, стрейчинг, кроссфит, аэробика, пилатес]
          minItems: 1
          maxItems: 3
          example: [бокс, аэробика, кроссфит]
          description: Типы тренировок, которые предпочитает пользователь (не более 3).
        personalTraining:
          type: boolean
          example: true
          description: Флаг готовности проводить индивидуальные тренировки
        trainerAchievements:
          type: string
          example: Множество наград и сертификатов
          minLength: 10
          maxLength: 140
          description: Заслуги тренера
        certificate:
          type: string
          example: certificate.pdf
          pattern: '^.+\.pdf$'
          description: Сертификат пользователя

    userWithoutPrivateRows:
      type: object
      properties:
        name:
          type: string
          example: Александр Петров
          minLength: 1
          maxLength: 15
          description: Имя пользователя.
        avatar:
          type: string
          example: avatar.jpg
          pattern: '^.+\.(jpg|png)$'
          description: Ссылка на аватар пользователя.
        gender:
          type: string
          enum: [женский, мужской, неважно]
          description: Пол пользователя.
          example: мужской
        birthDate:
          type: string
          example: 1990-01-01
          format: date
          description: Дата рождения пользователя.
        description:
          type: string
          example: Опытный тренер
          minLength: 10
          maxLength: 140
          description: Описание пользователя.
        location:
          type: string
          enum: [пионерская, петроградская, удельная, звёздная. спортивная]
          example: удельная
          description: Местоположение пользователя.
        backgroundImage:
          type: string
          example: background.jpg
          pattern: '^.+\.(jpg|png)$'
          description: Ссылка на фоновое изображение пользователя.
        trainingLevel:
          type: string
          enum: [новичок, любитель, профессионал]
          example: профессионал
          description: Уровень тренировок пользователя.
        workoutTypes:
          type: array
          items:
            type: string
            enum: [йога, бег, бокс, стрейчинг, кроссфит, аэробика, пилатес]
          minItems: 1
          maxItems: 3
          example: [стрейчинг, бег, аэробика]
          description: Типы тренировок, которые предпочитает пользователь (не более 3).
        workoutDuration:
          type: string
          enum: [10-30 мин, 30-50 мин, 50-80 мин, 80-100 мин]
          description: Длительность тренировок, выбранная пользователем.
        caloriesToBurn:
          type: integer
          minLength: 1000
          maxLength: 5000
          example: 1345
          description: Количество калорий, которые пользователь хочет сжечь (целое число).
        caloriesToSpend:
          type: integer
          minLength: 1000
          maxLength: 5000
          example: 3564
          description: Количество калорий, которые пользователь хочет потратить (целое число).
        readinessForWorkout:
          type: boolean
          description: Готовность к тренировкам пользователя.

    user:
      type: object
      properties:
        name:
          type: string
          example: Александр Петров
          minLength: 1
          maxLength: 15
          description: Имя пользователя.
        email:
          type: string
          format: email
          description: Email пользователя.
        avatar:
          type: string
          example: avatar.jpg
          pattern: '^.+\.(jpg|png)$'
          description: Ссылка на аватар пользователя.
        password:
          type: string
          description: Пароль пользователя.
        gender:
          type: string
          enum: [женский, мужской, неважно]
          example: мужской
          description: Пол пользователя.
        birthDate:
          type: string
          example: 1990-01-01
          format: date
          description: Дата рождения пользователя.
        description:
          type: string
          example: Опытный тренер
          minLength: 10
          maxLength: 140
          description: Описание пользователя.
        location:
          type: string
          enum: [пионерская, петроградская, удельная, звёздная. спортивная]
          example: удельная
          description: Местоположение пользователя.
        backgroundImage:
          type: string
          example: background.jpg
          pattern: '^.+\.(jpg|png)$'
          description: Ссылка на фоновое изображение пользователя.
        trainingLevel:
          type: string
          enum: [новичок, любитель, профессионал]
          example: профессионал
          description: Уровень тренировок пользователя.
        workoutTypes:
          type: array
          items:
            type: string
            enum: [йога, бег, бокс, стрейчинг, кроссфит, аэробика, пилатес]
          minItems: 1
          maxItems: 3
          example: [стрейчинг, бег, аэробика]
          description: Типы тренировок, которые предпочитает пользователь (не более 3).
        workoutDuration:
          type: string
          enum: [10-30 мин, 30-50 мин, 50-80 мин, 80-100 мин]
          description: Длительность тренировок, выбранная пользователем.
        caloriesToBurn:
          type: integer
          minLength: 1000
          maxLength: 5000
          example: 1345
          description: Количество калорий, которые пользователь хочет сжечь (целое число).
        caloriesToSpend:
          type: integer
          minLength: 1000
          maxLength: 5000
          example: 3564
          description: Количество калорий, которые пользователь хочет потратить (целое число).
        readinessForWorkout:
          type: boolean
          description: Готовность к тренировкам пользователя.

    trainerRdo:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор тренера.
        name:
          type: string
          description: Имя тренера.
        email:
          type: string
          format: email
          description: Email тренера.
        avatar:
          type: string
          pattern: '^.+\.(jpg|png)$'
          example: avatar.jpg
          description: Ссылка на аватар пользователя.
        gender:
          type: string
          enum: [женский, мужской, неважно]
          description: Пол тренера.
        birthDate:
          type: string
          format: date
          description: Дата рождения тренера.
        role:
          type: string
          example: тренер
          description: Роль тренера.
        description:
          type: string
          description: Описание тренера.
        location:
          type: string
          enum: [пионерская, петроградская, удельная, звёздная. спортивная]
          description: Местоположение тренера.
        backgroundImage:
          type: string
          description: Ссылка на фоновое изображение тренера.
        trainingLevel:
          type: string
          enum: [новичок, любитель, профессионал]
          description: Уровень тренировок тренера.
        workoutTypes:
          type: array
          items:
            type: string
            enum: [йога, бег, бокс, стрейчинг, кроссфит, аэробика, пилатес]
          description: Типы тренировок, которые предоставляет тренер.
        personalTraining:
          type: boolean
          description: Наличие персональных тренировок у тренера.
        trainerAchievements:
          type: string
          description: Достижения тренера.
        certificate:
          type: string
          description: Ссылка на сертификат тренера.

    userRdo:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор пользователя.
        name:
          type: string
          description: Имя пользователя.
        email:
          type: string
          format: email
          description: Email пользователя.
        avatar:
          type: string
          pattern: '^.+\.(jpg|png)$'
          description: Ссылка на аватар пользователя.
        gender:
          type: string
          enum: [женский, мужской, неважно]
          description: Пол пользователя.
        birthDate:
          type: string
          format: date
          description: Дата рождения пользователя.
        role:
          type: string
          example: пользователь
          description: Роль пользователя.
        description:
          type: string
          description: Описание пользователя.
        location:
          type: string
          enum: [пионерская, петроградская, удельная, звёздная. спортивная]
          description: Местоположение пользователя.
        backgroundImage:
          type: string
          pattern: '^.+\.(jpg|png)$'
          description: Ссылка на фоновое изображение пользователя.
        trainingLevel:
          type: string
          enum: [новичок, любитель, профессионал]
          description: Уровень тренировок пользователя.
        workoutTypes:
          type: array
          items:
            type: string
            enum: [йога, бег, бокс, стрейчинг, кроссфит, аэробика, пилатес]
          minItems: 1
          maxItems: 3
          example: [стрейчинг, бег, аэробика]
          description: Типы тренировок, которые предпочитает пользователь (не более 3).
        workoutDuration:
          type: string
          enum: [10-30 мин, 30-50 мин, 50-80 мин, 80-100 мин]
          description: Длительность тренировок, выбранная пользователем.
        caloriesToBurn:
          type: integer
          minLength: 1000
          maxLength: 5000
          example: 1345
          description: Количество калорий, которые пользователь хочет сжечь (целое число).
        caloriesToSpend:
          type: integer
          minLength: 1000
          maxLength: 5000
          example: 3564
          description: Количество калорий, которые пользователь хочет потратить (целое число).
        readinessForWorkout:
          type: boolean
          description: Готовность к тренировкам пользователя.

    userWithFriendsRdo:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор пользователя.
        name:
          type: string
          description: Имя пользователя.
        email:
          type: string
          format: email
          description: Email пользователя.
        avatar:
          type: string
          pattern: '^.+\.(jpg|png)$'
          description: Ссылка на аватар пользователя.
        gender:
          type: string
          enum: [женский, мужской, неважно]
          description: Пол пользователя.
        birthDate:
          type: string
          format: date
          description: Дата рождения пользователя.
        role:
          type: string
          example: пользователь
          description: Роль пользователя.
        description:
          type: string
          description: Описание пользователя.
        location:
          type: string
          enum: [пионерская, петроградская, удельная, звёздная. спортивная]
          description: Местоположение пользователя.
        backgroundImage:
          type: string
          pattern: '^.+\.(jpg|png)$'
          description: Ссылка на фоновое изображение пользователя.
        trainingLevel:
          type: string
          enum: [новичок, любитель, профессионал]
          description: Уровень тренировок пользователя.
        workoutTypes:
          type: array
          items:
            type: string
            enum: [йога, бег, бокс, стрейчинг, кроссфит, аэробика, пилатес]
          minItems: 1
          maxItems: 3
          example: [стрейчинг, бег, аэробика]
          description: Типы тренировок, которые предпочитает пользователь (не более 3).
        workoutDuration:
          type: string
          enum: [10-30 мин, 30-50 мин, 50-80 мин, 80-100 мин]
          description: Длительность тренировок, выбранная пользователем.
        caloriesToBurn:
          type: integer
          minLength: 1000
          maxLength: 5000
          example: 1345
          description: Количество калорий, которые пользователь хочет сжечь (целое число).
        caloriesToSpend:
          type: integer
          minLength: 1000
          maxLength: 5000
          example: 3564
          description: Количество калорий, которые пользователь хочет потратить (целое число).
        readinessForWorkout:
          type: boolean
          description: Готовность к тренировкам пользователя.
        friends:
          type: array
          items:
            $ref: '#/components/schemas/userRdo'
          description: Список друзей пользователя.

    loginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
          maxLength: 12

    loggedUserRdo:
      type: object
      properties:
        id:
          type: string
        accessToken:
          type: string
        refreshToken:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [пользователь, тренер]

    checkedUserRdo:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [пользователь, тренер]

    balanceRdo:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор баланса.
        training:
          $ref: '#/components/schemas/trainingRdo'
        availableQuantity:
          type: integer
          description: Доступный баланс.

    notificationRdo:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор уведомления.
        createdAt:
          type: string
          format: date
          description: Дата создания.
        text:
          type: string
          description: Текс уведомления
        user:
          $ref: '#/components/schemas/userRdo'

    trainingRdo:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор тренировки.
        name:
          type: string
          minLength: 1
          maxLength: 15
          description: Название тренировки.
        backgroundImage:
          type: string
          pattern: '^.+\.(jpg|png)$'
          description: Фоновая картинка тренировки.
        trainingLevel:
          type: string
          enum: [новичок, любитель, профессионал]
          description: Уровень пользователя, на которого рассчитана тренировка. (Обязательное поле)
        workoutType:
          type: string
          enum: [йога, бег, бокс, стрейчинг, кроссфит, аэробика, пилатес]
          description: Тип тренировки. (Обязательное поле)
        workoutDuration:
          type: string
          enum: [10-30 мин, 30-50 мин, 50-80 мин, 80-100 мин]
          description: Длительность тренировки. (Обязательное поле)
        price:
          type: integer
          description: Стоимость тренировки. (Целые числа, не меньше 0)
        calories:
          type: integer
          minLength: 1000
          maxLength: 5000
          description: Количество калорий.
        description:
          type: string
          minLength: 10
          maxLength: 140
          description: Описание тренировки.
        genderPreference:
          type: string
          enum: [для женщин, для мужчин, для всех]
          description: Пол пользователя, для которого предназначена тренировка. (Обязательное поле)
        video:
          type: string
          pattern: \.(mov|avi|mp4)$
          description: Видео файл с демонстрацией тренировки.
        rating:
          type: number
          description: Рейтинг тренировки.
        specialOffer:
          type: boolean
          description: Флаг определяет участие тренировки в качестве специального предложения.
        trainer:
          $ref: '#/components/schemas/trainerRdo'

    trainingOrderRdo:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор заказа.
        name:
          type: string
          description: Название тренировки.
        backgroundImage:
          type: string
          description: Фоновая картинка тренировки.
        trainingLevel:
          type: string
          enum:
            - новичок
            - любитель
            - профессионал
          description: Уровень тренировок пользователя.
        workoutType:
          type: string
          enum:
            - йога
            - бег
            - бокс
            - стрейчинг
            - кроссфит
            - аэробика
            - пилатес
          description: Тип тренировки.
        workoutDuration:
          type: string
          enum:
            - 10-30 мин
            - 30-50 мин
            - 50-80 мин
            - 80-100 мин
          description: Длительность тренировки.
        price:
          type: integer
          description: Стоимость тренировки.
        calories:
          type: integer
          description: Количество калорий.
        description:
          type: string
          description: Описание тренировки.
        genderPreference:
          type: string
          enum:
            - для женщин
            - для мужчин
            - для всех
          description: Пол пользователя для которого предназначена тренировка.
        video:
          type: string
          pattern: \.(mov|avi|mp4)$
          description: Видео файл с демонстрацией тренировки.
        rating:
          type: number
          description: Рейтинг тренировки.
        specialOffer:
          type: boolean
          description: Признак специального предложения.
        trainer:
          $ref: '#/components/schemas/trainerRdo'
        purchasedQuantity:
          type: number
          description: Количество купленных тренировок.
        totalSalesAmount:
          type: number
          description: Общая сумма продаж.
        createdAt:
          type: string
          format: date-time
          description: Дата создания заказа.

    orderRdo:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор заказа.
        purchaseType:
          type: string
          enum:
            - абонемент
          description: Тип покупки.
        training:
          $ref: '#/components/schemas/trainingRdo'
          description: Информация о тренировке, на которую сделан заказ.
        price:
          type: integer
          description: Стоимость заказа.
        quantity:
          type: integer
          description: Количество заказанных товаров.
        totalAmount:
          type: integer
          description: Общая сумма заказа.
        paymentMethod:
          type: string
          enum:
            - visa
            - mir
            - umoney
          description: Способ оплаты заказа.
        createdAt:
          type: string
          format: date
          description: Дата создания заказа.
